<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[標籤: VPNC | 雨吁]]></title>
  <link href="http://shadow.ma/blog/tags/vpnc/atom.xml" rel="self"/>
  <link href="http://shadow.ma/"/>
  <updated>2012-10-18T20:04:34+08:00</updated>
  <id>http://shadow.ma/</id>
  <author>
    <name><![CDATA[Shadow Ma,i@shadow.ma]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[使用 NetworkManager 設置 VPNC 和路由表]]></title>
    <link href="http://shadow.ma/blog/2012/10/18/configure-vpnc-route-tables-with-networkmanager/"/>
    <updated>2012-10-18T01:20:00+08:00</updated>
    <id>http://shadow.ma/blog/2012/10/18/configure-vpnc-route-tables-with-networkmanager</id>
    <content type="html"><![CDATA[<p>昨晚看到個 VPN 服務 <a href="http://106.187.44.5/home?referral=70588D95C2F9DF00D908B3CC2282F650" title="IQLink">IQLink</a>，免費用戶每月有 100G 流量，測了下速度還不錯，可以留着以備不時之需。</p>

<p>用 VPN 當然得配置路由表，之前用 PPTP VPN 時就配置過 <a href="http://code.google.com/p/chnroutes/" title="chnroutes">chnroutes</a>，用來給國內 ip 添加路由表，用非 VPN 線路高速訪問國內網站，還能節省流量。</p>

<!-- more -->


<p>IQLink 提供的是 Cisco VPN，Linux 下要用 VPNC 連接，chnroutes 網站上提供了 PPTP 和 OpenVPN 的設置教程，唯獨沒有 VPNC，還好 VPNC 支持連接腳本，默認配置的 <code>/etc/vpnc/vpnc-script</code> 能在執行 <code>pre-init</code>、<code>connect</code>、<code>post-connect</code>、<code>disconnect</code>、<code>post-disconnect</code> 和 <code>reconnect</code> 六種 action 時調用自定義腳本，只要把 <code>python chnroutes.py -p linux</code> 生成的腳本 <code>ip-pre-up</code> 和 <code>ip-down</code> 分別放入 <code>/etc/vpnc/pre-init.d</code> 和 <code>/etc/vpnc/post-disconnect.d</code> 就能在連接 VPN 前後成功添加恢復路由表，但在使用 NetworkManager 連接 VPNC 時，發現這些腳本根本就沒有被執行，NM 的 VPNC 插件用自帶的 <code>nm-vpnc-service-vpnc-helper</code> 替代了 <code>vpnc-script</code>，完全不讀取 <code>/etc/vpnc</code> 下的配置，而且這東西是二進制文件沒法改，試過直接替換成 <code>vpnc-script</code> 也不行，正準備放棄時突然想起 NetworkManager 也支持連接腳本，直接用 NetworkManager 配置的話就不用再爲每種 VPN 都設定路由表了。</p>

<p>把下面的腳本（根據自己實際情況修改）放入 <code>/etc/NetworkManager/dispatcher.d</code>，腳本中在觸發 <code>vpn-down</code> 恢復路由表時我排除了正在配置的 VPNC 連接的 UUID，因爲斷開連接時路由表已經被恢復，導致腳本返回一大串錯誤，這應該是 <code>nm-vpnc-service-vpnc-helper</code> 中定義的操作。</p>

<p>```bash 99-chnroutes</p>

<h1>!/bin/sh</h1>

<p>INTERFACE=$1
STATUS=$2</p>

<p>case "$STATUS" in</p>

<pre><code>    'vpn-up')
            exec /etc/chnroutes/vpnup
            ;;
    'vpn-down')
            if [ "$CONNECTION_UUID" != "1f2c647b-dd70-4f97-8300-0cf6cd4a2e4c" ]; then
            exec /etc/chnroutes/vpndown
            fi
            ;;
</code></pre>

<p>esac
```</p>

<p>重新連接，測試發現路由表並沒有被成功設置，手動執行腳本發現必須在連接前設置路由表才行，而腳本中的 <code>vpn-up</code> 在連接建立後才觸發自然無效了，解決方法是把設置路由表的腳本（我這裏是 <code>/etc/chnroutes/vpnup</code>）中的：</p>

<pre><code>OLDGW=`ip route show | grep '^default' | sed -e 's/default via \([^ ]*\).*/\1/'`
</code></pre>

<p>修改爲：</p>

<pre><code>OLDGW=`ip route show | grep '^[^d].*proto static'|sed -e 's/.*via \([^ ]*\) .*/\1/'`
</code></pre>

<p>重新連接，問題解決。現在用 NetworkManager 連接的 VPN 都會自動設置路由表了，以前給 PPTP 設置的撥號腳本可以移除了。</p>
]]></content>
  </entry>
  
</feed>
